import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.stream.Collectors;

public List<String> getAllOccurrenceIds(List<String> objectIds, MarkLogicProjectConnector connection) throws NimtApiException {
    String idsString = objectIds.stream()
                                .map(objectId -> String.format("%s:%s", ICD_PREFIX, objectId))
                                .collect(Collectors.joining()).strip();

    try {
        // Read the SPARQL query from the file
        String sparqlQuery = Files.lines(Paths.get("path/to/get_tree_view_object.sparql"))
                                  .collect(Collectors.joining("\n"));

        // Replace the placeholder with the actual IDs string
        sparqlQuery = sparqlQuery.replace("PLACEHOLDER_IDS", idsString);

        // Execute the SPARQL query and get the RDF model
        Model model = rdfUtil.getModelFromConstruct(connection, SparqlCategory.DATA, sparqlQuery, idsString);

        // Extract and return the IDs from the RDF model
        return getIdsFromTriples(model);
    } catch (IOException e) {
        throw new NimtApiException("Error reading SPARQL query file", e);
    } catch (Exception e) {
        throw new NimtApiException("Error executing SPARQL query", e);
    }
}

// Example implementation of getIdsFromTriples
private List<String> getIdsFromTriples(Model model) {
    // Your implementation here
}
